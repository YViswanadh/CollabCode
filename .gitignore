# .gitignore

# Dependency directories
# These are crucial! They contain downloaded packages and can be very large.
# They should be regenerated by running `npm install` in each respective directory.
node_modules/

# If you want to be super explicit for sub-directories, you could use:
# /backend/node_modules
# /frontend/node_modules
# However, `node_modules/` at the root generally covers all node_modules directories
# within the repository.

# Build output folders for the frontend
# Create React App typically uses 'build'
/frontend/build/
# Vite typically uses 'dist'
/frontend/dist/

# Build output folder for the backend (if you ever use TypeScript or a bundler)
# /backend/dist/
# /backend/build/

# Log files
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Environment variables files
# These files often contain sensitive information like API keys or database credentials.
# NEVER commit them to your repository.
.env
.env.local
.env.*.local
.env.development
.env.development.local
.env.test
.env.test.local
.env.production
.env.production.local

# Operating System generated files
# macOS
.DS_Store
.AppleDouble
.LSOverride
._*
.Spotlight-V100
.Trashes
# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# IDE / Editor specific configuration files
# VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
# JetBrains (IntelliJ, WebStorm, etc.)
.idea/
# Sublime Text
*.sublime-project
*.sublime-workspace
# Atom
.atom/
# Eclipse
.project
.classpath
.cproject
.settings/
# Netbeans
nbproject/
# Vi/Vim swap files
*.swp
*.swo

# Coverage directory used by tools like istanbul
coverage/
.nyc_output/

# Optional: Yarn specific files (if you use Yarn Berry PnP)
# .pnp.*
# .yarn/*
# !.yarn/patches
# !.yarn/plugins
# !.yarn/releases
# !.yarn/sdks
# !.yarn/versions